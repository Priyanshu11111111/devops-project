Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

PS C:\Users\priya> ssh -i C:\Users\priya\Downloads\final  ec2-user@54.237.251.22
The authenticity of host '54.237.251.22 (54.237.251.22)' can't be established.
ED25519 key fingerprint is SHA256:m5KF8hffBMvujtPYPebTL82Y8aRKS5g/IJb0HXNltvY.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '54.237.251.22' (ED25519) to the list of known hosts.
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
[ec2-user@ip-172-31-86-10 ~]$ sudo hostnamectl set-hostname vm1
[ec2-user@ip-172-31-86-10 ~]$
[ec2-user@ip-172-31-86-10 ~]$
[ec2-user@ip-172-31-86-10 ~]$
[ec2-user@ip-172-31-86-10 ~]$ exit
logout
Connection to 54.237.251.22 closed.
PS C:\Users\priya> ssh -i C:\Users\priya\Downloads\final  ec2-user@54.237.251.22
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Fri Mar 21 12:36:16 2025 from 152.58.17.118
[ec2-user@vm1 ~]$ mkdir infra
[ec2-user@vm1 ~]$
[ec2-user@vm1 ~]$
[ec2-user@vm1 ~]$ ls
infra
[ec2-user@vm1 ~]$ cd infra/
[ec2-user@vm1 infra]$ ls
Infra-VPC-Jenkins
[ec2-user@vm1 infra]$ cd Infra-VPC-Jenkins/
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ ls
main.tf
[ec2-user@vm1 Infra-VPC-Jenkins]$ vi main.tf
[ec2-user@vm1 Infra-VPC-Jenkins]$ cat main.tf
provider "aws" {
  region = "us-east-1"
}

resource "aws_vpc" "main_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "public_subnet" {
  vpc_id                  = aws_vpc.main_vpc.id
  cidr_block              = "10.0.1.0/24"
  map_public_ip_on_launch = true
}

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.main_vpc.id
}

resource "aws_route_table" "public_rt" {
  vpc_id = aws_vpc.main_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }
}

resource "aws_route_table_association" "public_rt_assoc" {
  subnet_id      = aws_subnet.public_subnet.id
  route_table_id = aws_route_table.public_rt.id
}


resource "aws_security_group" "sg_jenkins" {
  vpc_id = aws_vpc.main_vpc.id

  ingress {
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}


resource "aws_instance" "jenkins" {
  ami                    = "ami-08b5b3a93ed654d19"
  instance_type           = "t2.medium"
  subnet_id              = aws_subnet.public_subnet.id
  associate_public_ip_address = true
  key_name               = "final"
  security_groups        = [aws_security_group.sg_jenkins.id]
  root_block_device {
    volume_size = 22
  }
  tags                   = { Name = "jenkins1" }

  user_data = <<-EOF
    #!/bin/bash
    sudo useradd ansible -m -s /bin/bash -p $(openssl passwd -1 admin@123)
    echo 'ansible ALL=(ALL:ALL) NOPASSWD:ALL' | sudo EDITOR='tee -a' visudo
    sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
    sudo systemctl restart sshd
  EOF
}
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ aws configure
AWS Access Key ID [None]: AKIA6JQ444WIJZCM7PJD
AWS Secret Access Key [None]: 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
Default region name [None]: us-east-1
Default output format [None]:
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ terraform init
-bash: terraform: command not found
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
Adding repo from: https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
[ec2-user@vm1 Infra-VPC-Jenkins]$ sudo yum -y install terraform
Amazon Linux 2023 Kernel Livepatch repository                                           114 kB/s |  14 kB     00:00
Hashicorp Stable - x86_64                                                                23 MB/s | 1.6 MB     00:00
Dependencies resolved.
========================================================================================================================
 Package                       Architecture        Version                               Repository                Size
========================================================================================================================
Installing:
 terraform                     x86_64              1.11.2-1                              hashicorp                 27 M
Installing dependencies:
 git                           x86_64              2.47.1-1.amzn2023.0.2                 amazonlinux               54 k
 git-core                      x86_64              2.47.1-1.amzn2023.0.2                 amazonlinux              4.7 M
 git-core-doc                  noarch              2.47.1-1.amzn2023.0.2                 amazonlinux              2.8 M
 perl-Error                    noarch              1:0.17029-5.amzn2023.0.2              amazonlinux               41 k
 perl-File-Find                noarch              1.37-477.amzn2023.0.6                 amazonlinux               26 k
 perl-Git                      noarch              2.47.1-1.amzn2023.0.2                 amazonlinux               42 k
 perl-TermReadKey              x86_64              2.38-9.amzn2023.0.2                   amazonlinux               36 k
 perl-lib                      x86_64              0.65-477.amzn2023.0.6                 amazonlinux               15 k

Transaction Summary
========================================================================================================================
Install  9 Packages

Total download size: 35 M
Installed size: 123 M
Downloading Packages:
(1/9): git-2.47.1-1.amzn2023.0.2.x86_64.rpm                                             840 kB/s |  54 kB     00:00
(2/9): perl-Error-0.17029-5.amzn2023.0.2.noarch.rpm                                     1.9 MB/s |  41 kB     00:00
(3/9): git-core-2.47.1-1.amzn2023.0.2.x86_64.rpm                                         40 MB/s | 4.7 MB     00:00
(4/9): perl-File-Find-1.37-477.amzn2023.0.6.noarch.rpm                                  808 kB/s |  26 kB     00:00
(5/9): git-core-doc-2.47.1-1.amzn2023.0.2.noarch.rpm                                     19 MB/s | 2.8 MB     00:00
(6/9): perl-Git-2.47.1-1.amzn2023.0.2.noarch.rpm                                        1.4 MB/s |  42 kB     00:00
(7/9): perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64.rpm                                  1.3 MB/s |  36 kB     00:00
(8/9): perl-lib-0.65-477.amzn2023.0.6.x86_64.rpm                                        524 kB/s |  15 kB     00:00
(9/9): terraform-1.11.2-1.x86_64.rpm                                                     77 MB/s |  27 MB     00:00
------------------------------------------------------------------------------------------------------------------------
Total                                                                                    63 MB/s |  35 MB     00:00
Hashicorp Stable - x86_64                                                               186 kB/s | 3.9 kB     00:00
Importing GPG key 0xA621E701:
 Userid     : "HashiCorp Security (HashiCorp Package Signing) <security+packaging@hashicorp.com>"
 Fingerprint: 798A EC65 4E5C 1542 8C8E 42EE AA16 FCBC A621 E701
 From       : https://rpm.releases.hashicorp.com/gpg
Key imported successfully
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                1/1
  Installing       : git-core-2.47.1-1.amzn2023.0.2.x86_64                                                          1/9
  Installing       : git-core-doc-2.47.1-1.amzn2023.0.2.noarch                                                      2/9
  Installing       : perl-lib-0.65-477.amzn2023.0.6.x86_64                                                          3/9
  Installing       : perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                                                    4/9
  Installing       : perl-File-Find-1.37-477.amzn2023.0.6.noarch                                                    5/9
  Installing       : perl-Error-1:0.17029-5.amzn2023.0.2.noarch                                                     6/9
  Installing       : perl-Git-2.47.1-1.amzn2023.0.2.noarch                                                          7/9
  Installing       : git-2.47.1-1.amzn2023.0.2.x86_64                                                               8/9
  Installing       : terraform-1.11.2-1.x86_64                                                                      9/9
  Running scriptlet: terraform-1.11.2-1.x86_64                                                                      9/9
  Verifying        : git-2.47.1-1.amzn2023.0.2.x86_64                                                               1/9
  Verifying        : git-core-2.47.1-1.amzn2023.0.2.x86_64                                                          2/9
  Verifying        : git-core-doc-2.47.1-1.amzn2023.0.2.noarch                                                      3/9
  Verifying        : perl-Error-1:0.17029-5.amzn2023.0.2.noarch                                                     4/9
  Verifying        : perl-File-Find-1.37-477.amzn2023.0.6.noarch                                                    5/9
  Verifying        : perl-Git-2.47.1-1.amzn2023.0.2.noarch                                                          6/9
  Verifying        : perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                                                    7/9
  Verifying        : perl-lib-0.65-477.amzn2023.0.6.x86_64                                                          8/9
  Verifying        : terraform-1.11.2-1.x86_64                                                                      9/9

Installed:
  git-2.47.1-1.amzn2023.0.2.x86_64                            git-core-2.47.1-1.amzn2023.0.2.x86_64
  git-core-doc-2.47.1-1.amzn2023.0.2.noarch                   perl-Error-1:0.17029-5.amzn2023.0.2.noarch
  perl-File-Find-1.37-477.amzn2023.0.6.noarch                 perl-Git-2.47.1-1.amzn2023.0.2.noarch
  perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64                 perl-lib-0.65-477.amzn2023.0.6.x86_64
  terraform-1.11.2-1.x86_64

Complete!
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ terraform init
Initializing the backend...
Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Installing hashicorp/aws v5.92.0...
- Installed hashicorp/aws v5.92.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
[ec2-user@vm1 Infra-VPC-Jenkins]$ terraform -version
Terraform v1.11.2
on linux_amd64
+ provider registry.terraform.io/hashicorp/aws v5.92.0
[ec2-user@vm1 Infra-VPC-Jenkins]$ terraform validate
Success! The configuration is valid.

[ec2-user@vm1 Infra-VPC-Jenkins]$ terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.jenkins will be created
  + resource "aws_instance" "jenkins" {
      + ami                                  = "ami-08b5b3a93ed654d19"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.medium"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "final"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "jenkins1"
        }
      + tags_all                             = {
          + "Name" = "jenkins1"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "3a69579435b82b73537f0df744cb5574dad5e327"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device {
          + delete_on_termination = true
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags_all              = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 22
          + volume_type           = (known after apply)
        }
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.public_rt_assoc will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.sg_jenkins will be created
  + resource "aws_security_group" "sg_jenkins" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 8080
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 8080
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.public_subnet will be created
  + resource "aws_subnet" "public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main_vpc will be created
  + resource "aws_vpc" "main_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if
you run "terraform apply" now.
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.jenkins will be created
  + resource "aws_instance" "jenkins" {
      + ami                                  = "ami-08b5b3a93ed654d19"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.medium"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "final"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "jenkins1"
        }
      + tags_all                             = {
          + "Name" = "jenkins1"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "3a69579435b82b73537f0df744cb5574dad5e327"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device {
          + delete_on_termination = true
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags_all              = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 22
          + volume_type           = (known after apply)
        }
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags_all         = (known after apply)
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.public_rt_assoc will be created
  + resource "aws_route_table_association" "public_rt_assoc" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.sg_jenkins will be created
  + resource "aws_security_group" "sg_jenkins" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 8080
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 8080
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.public_subnet will be created
  + resource "aws_subnet" "public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = (known after apply)
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags_all                                       = (known after apply)
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.main_vpc will be created
  + resource "aws_vpc" "main_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags_all                             = (known after apply)
    }

Plan: 7 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_vpc.main_vpc: Creating...
aws_vpc.main_vpc: Creation complete after 1s [id=vpc-0f556b7a32ef77174]
aws_security_group.sg_jenkins: Creating...
aws_subnet.public_subnet: Creating...
aws_internet_gateway.igw: Creating...
aws_internet_gateway.igw: Creation complete after 0s [id=igw-0fafd3c87c438f4ea]
aws_route_table.public_rt: Creating...
aws_route_table.public_rt: Creation complete after 1s [id=rtb-060a8bf93408814d7]
aws_security_group.sg_jenkins: Creation complete after 2s [id=sg-06dadb6d62a97d526]
aws_subnet.public_subnet: Still creating... [10s elapsed]
aws_subnet.public_subnet: Creation complete after 11s [id=subnet-0bc07ffbf28666897]
aws_instance.jenkins: Creating...
aws_route_table_association.public_rt_assoc: Creating...
aws_route_table_association.public_rt_assoc: Creation complete after 0s [id=rtbassoc-052097c1954069cea]
aws_instance.jenkins: Still creating... [10s elapsed]
aws_instance.jenkins: Creation complete after 12s [id=i-024d2f6f943c774d5]

Apply complete! Resources: 7 added, 0 changed, 0 destroyed.
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$
[ec2-user@vm1 Infra-VPC-Jenkins]$ cd
[ec2-user@vm1 ~]$ mkdir config
[ec2-user@vm1 ~]$ ls
config  infra
[ec2-user@vm1 ~]$ cd config/
[ec2-user@vm1 config]$ sudo yum install ansible
Last metadata expiration check: 0:08:26 ago on Fri Mar 21 12:46:34 2025.
Dependencies resolved.
========================================================================================================================
 Package                    Architecture         Version                                Repository                 Size
========================================================================================================================
Installing:
 ansible                    noarch               8.3.0-1.amzn2023.0.1                   amazonlinux                32 M
Installing dependencies:
 ansible-core               x86_64               2.15.3-1.amzn2023.0.8                  amazonlinux               2.5 M
 sshpass                    x86_64               1.09-6.amzn2023.0.1                    amazonlinux                28 k

Transaction Summary
========================================================================================================================
Install  3 Packages

Total download size: 35 M
Installed size: 529 M
Is this ok [y/N]: y
Downloading Packages:
(1/3): sshpass-1.09-6.amzn2023.0.1.x86_64.rpm                                           232 kB/s |  28 kB     00:00
(2/3): ansible-core-2.15.3-1.amzn2023.0.8.x86_64.rpm                                    8.7 MB/s | 2.5 MB     00:00
(3/3): ansible-8.3.0-1.amzn2023.0.1.noarch.rpm                                           49 MB/s |  32 MB     00:00
------------------------------------------------------------------------------------------------------------------------
Total                                                                                    50 MB/s |  35 MB     00:00
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                1/1
  Installing       : sshpass-1.09-6.amzn2023.0.1.x86_64                                                             1/3
  Installing       : ansible-core-2.15.3-1.amzn2023.0.8.x86_64                                                      2/3
  Installing       : ansible-8.3.0-1.amzn2023.0.1.noarch                                                            3/3
  Running scriptlet: ansible-8.3.0-1.amzn2023.0.1.noarch                                                            3/3
  Verifying        : ansible-8.3.0-1.amzn2023.0.1.noarch                                                            1/3
  Verifying        : ansible-core-2.15.3-1.amzn2023.0.8.x86_64                                                      2/3
  Verifying        : sshpass-1.09-6.amzn2023.0.1.x86_64                                                             3/3

Installed:
  ansible-8.3.0-1.amzn2023.0.1.noarch   ansible-core-2.15.3-1.amzn2023.0.8.x86_64   sshpass-1.09-6.amzn2023.0.1.x86_64

Complete!
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$ vi jenkins.ini
[ec2-user@vm1 config]$  3L, 191B written
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/ec2-user/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/ec2-user/.ssh/id_rsa
Your public key has been saved in /home/ec2-user/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:SBKSx7AmVnnHO2kSjG2US2GwekOi0XkCjbnYMYfgoBQ ec2-user@vm1
The key's randomart image is:
+---[RSA 3072]----+
|+E+BO++          |
|BoB**X o         |
|=**B* = o        |
|=+=o = *         |
|.. o  + S        |
|  . .            |
|                 |
|                 |
|                 |
+----[SHA256]-----+
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$ ssh ansible@3.238.150.35
The authenticity of host '3.238.150.35 (3.238.150.35)' can't be established.
ED25519 key fingerprint is SHA256:Cel4lwg4TS7bdjMou32KocHdq07klCYtP09TqsjaCKc.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '3.238.150.35' (ED25519) to the list of known hosts.
ansible@3.238.150.35's password:
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Fri Mar 21 13:01:22 2025 from 152.58.17.118
[ansible@ip-10-0-1-254 ~]$ exit
logout
Connection to 3.238.150.35 closed.
[ec2-user@vm1 config]$ ssh-copy-id ansible@3.238.150.35
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/ec2-user/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
ansible@3.238.150.35's password:

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'ansible@3.238.150.35'"
and check to make sure that only the key(s) you wanted were added.

[ec2-user@vm1 config]$ ssh ansible@3.238.150.35
   ,     #_
   ~\_  ####_        Amazon Linux 2023
  ~~  \_#####\
  ~~     \###|
  ~~       \#/ ___   https://aws.amazon.com/linux/amazon-linux-2023
   ~~       V~' '->
    ~~~         /
      ~~._.   _/
         _/ _/
       _/m/'
Last login: Fri Mar 21 13:02:23 2025 from 54.237.251.22
[ansible@ip-10-0-1-254 ~]$ exit
logout
Connection to 3.238.150.35 closed.
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$ ansible-playbook jenkins-install.yaml  -i jenkins.ini

PLAY [Install Jenkins on CentOS/RHEL] **********************************************************************************

TASK [Gathering Facts] *************************************************************************************************
ok: [jenkins1]

TASK [Set hostname] ****************************************************************************************************
changed: [jenkins1]

TASK [dnf update] ******************************************************************************************************
changed: [jenkins1]

TASK [Add Jenkins repo] ************************************************************************************************
changed: [jenkins1]

TASK [Import Jenkins repo key] *****************************************************************************************
changed: [jenkins1]

TASK [Upgrade all packages] ********************************************************************************************
changed: [jenkins1]

TASK [Install Java 17 Amazon Corretto] *********************************************************************************
changed: [jenkins1]

TASK [Install Jenkins] *************************************************************************************************
changed: [jenkins1]

TASK [Enable Jenkins service] ******************************************************************************************
changed: [jenkins1]

TASK [Check Jenkins service status] ************************************************************************************
changed: [jenkins1]

TASK [Print Jenkins service status] ************************************************************************************
ok: [jenkins1] => {
    "msg": [
        "● jenkins.service - Jenkins Continuous Integration Server",
        "     Loaded: loaded (/usr/lib/systemd/system/jenkins.service; enabled; preset: disabled)",
        "     Active: active (running) since Fri 2025-03-21 13:05:38 UTC; 508ms ago",
        "   Main PID: 26035 (java)",
        "      Tasks: 47 (limit: 4657)",
        "     Memory: 730.9M",
        "        CPU: 15.410s",
        "     CGroup: /system.slice/jenkins.service",
        "             └─26035 /usr/bin/java -Djava.awt.headless=true -jar /usr/share/java/jenkins.war --webroot=/var/cache/jenkins/war --httpPort=8080",
        "",
        "Mar 21 13:05:35 jenkins1 jenkins[26035]: 0d5acd005f5945a7acbe9245565afdd4",
        "Mar 21 13:05:35 jenkins1 jenkins[26035]: This may also be found at: /var/lib/jenkins/secrets/initialAdminPassword",
        "Mar 21 13:05:35 jenkins1 jenkins[26035]: *************************************************************",
        "Mar 21 13:05:35 jenkins1 jenkins[26035]: *************************************************************",
        "Mar 21 13:05:35 jenkins1 jenkins[26035]: *************************************************************",
        "Mar 21 13:05:38 jenkins1 jenkins[26035]: 2025-03-21 13:05:38.497+0000 [id=31]        INFO        jenkins.InitReactorRunner$1#onAttained: Completed initialization",
        "Mar 21 13:05:38 jenkins1 jenkins[26035]: 2025-03-21 13:05:38.510+0000 [id=23]        INFO        hudson.lifecycle.Lifecycle#onReady: Jenkins is fully up and running",
        "Mar 21 13:05:38 jenkins1 systemd[1]: Started jenkins.service - Jenkins Continuous Integration Server.",
        "Mar 21 13:05:38 jenkins1 jenkins[26035]: 2025-03-21 13:05:38.707+0000 [id=48]        INFO        h.m.DownloadService$Downloadable#load: Obtained the updated data file for hudson.tasks.Maven.MavenInstaller",
        "Mar 21 13:05:38 jenkins1 jenkins[26035]: 2025-03-21 13:05:38.712+0000 [id=48]        INFO        hudson.util.Retrier#start: Performed the action check updates server successfully at the attempt #1"
    ]
}

TASK [Install Git] *****************************************************************************************************
changed: [jenkins1]

TASK [Download kubectl] ************************************************************************************************
changed: [jenkins1]

TASK [Install Docker] **************************************************************************************************
changed: [jenkins1]

TASK [Start and enable Docker service] *********************************************************************************
changed: [jenkins1]

TASK [Add Jenkins user to Docker group] ********************************************************************************
changed: [jenkins1]

TASK [Install eksctl on AmzLinux2023] **********************************************************************************
changed: [jenkins1]

PLAY RECAP *************************************************************************************************************
jenkins1                   : ok=17   changed=15   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$
[ec2-user@vm1 config]$ client_loop: send disconnect: Connection reset
PS C:\Users\priya>